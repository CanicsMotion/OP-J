{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cli",
				"clip"
			],
			[
				"re",
				"return"
			],
			[
				"lo",
				"localScale"
			],
			[
				"s",
				"selected"
			],
			[
				"del",
				"delete"
			],
			[
				"k",
				"keys"
			],
			[
				"get",
				"getWavForm"
			],
			[
				"by",
				"byteToInt"
			],
			[
				"red",
				"read"
			],
			[
				"wa",
				"waveForm"
			],
			[
				"pl",
				"playhead"
			],
			[
				"K",
				"KEYDOWN"
			],
			[
				"c",
				"coice"
			],
			[
				"loo",
				"looping"
			],
			[
				"D",
				"DISPLAYSURF"
			],
			[
				"B",
				"BLACK"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import pygame, sys\nfrom pygame.locals import *\nimport os\nfrom opener import *\nfrom collect import *\nfrom arranger import *\n  \n\nmode = 0\n#Modes:\n#0 none\n#1 opener\n#2 synth\nlooping = False\n\nSYNTH = [\"Arranger\",\"Keyboard\",\"Drumrack\",\"Custom\"]\n\nif __name__ == \"__main__\":\n    pass\n\ndef scan(folder,extension):\n    items = []\n    for item in os.listdir(folder):\n        if item.endswith(extension):\n            items.append(item)\n    print items\n    return items\nclass Status():\n\tlastId = 0\n\tdef __init__(s,values):\n\t\ts.lastId = int(values.get(\"lastId\"))\n\tdef __repr__(s):\n\t\treturn '{\"lastId\":'+str(s.lastId)+'}'\n\tdef getNewId(s):\n\t\ts.lastId +=1\n\t\twith open(\"status.json\",\"w\") as f:\n\t\t\tprint s\n\t\t\tf.write(str(s))\n\t\treturn s.lastId\n\t\nwith open(\"status.json\",\"r\") as f:\n\tstatus = json.load(f,object_hook=Status)\nprint status\npygame.init()\npygame.font.init()\nswidth = pygame.display.Info().current_w\nsheight = pygame.display.Info().current_h\npygame.mixer.quit()\n\nDISPLAYSURF = pygame.display.set_mode((400, 300), 0,32)\npygame.display.set_caption('Drawing')\nfont =pygame.font.SysFont(\"monospce\",40)\nwhile True:\n\tmode = 1\n\tprompt = Promt(DISPLAYSURF,SYNTH)\n\tcoice = prompt.loop()\n\tmode = 2\n\tif coice == \"Keyboard\":\n\t\tover = Keyboard(DISPLAYSURF,seasonId=status.getNewId())\n\tif coice == \"Drumrack\": \n\t\tover = Drumrack(DISPLAYSURF,seasonId=status.getNewId())\n\tif coice == \"Arranger\":\n\t\tover = Arranger(DISPLAYSURF)\n\t\tover.loop()\n\telif coice == \"Custom\":\n\t\tlist = scan(\"pds\",\".pd\")\n\t\tprompt = Promt(DISPLAYSURF,list)\n\t\tcoice = prompt.loop()\n\t\tprint coice\n\t\tcoice = os.path.join(\"pds\",coice)\n\t\tover = Custom(DISPLAYSURF,seasonId=status.getNewId())\n\t\tover.start(coice)\n\t\t#TODO start custom synth\n\tprint \"Finish\"",
			"file": "OPJ.py",
			"file_size": 1694,
			"file_write_time": 131415066797949838,
			"settings":
			{
				"buffer_size": 1696,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "arranger.py",
			"settings":
			{
				"buffer_size": 7711,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "collect.py",
			"settings":
			{
				"buffer_size": 6511,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "opener.py",
			"settings":
			{
				"buffer_size": 2854,
				"line_ending": "Unix"
			}
		},
		{
			"file": "status.json",
			"settings":
			{
				"buffer_size": 13,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/pi/Documents/Janeks Projects/Python/OP-J/misc/drawing.py",
		"/home/pi/Documents/Janeks Projects/Python/OP-J/misc/durTest.py",
		"/home/pi/Documents/Janeks Projects/Python/OP-K/OPJ.py",
		"/home/pi/Documents/Janeks Projects/Python/OP-K/opener.py",
		"/home/pi/Documents/Janeks Projects/Python/OP-K/collect.py",
		"/home/pi/Documents/Janeks Projects/Python/OP-K/arranger.py",
		"/home/pi/Documents/Janeks Projects/Python/OP-J/pds/rec.wav",
		"/usr/bin/zenity"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"state",
			"    ",
			"file"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    ",
			"item"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "OPJ.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1696,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "arranger.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7711,
						"regions":
						{
						},
						"selection":
						[
							[
								1066,
								1066
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 152.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "collect.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6511,
						"regions":
						{
						},
						"selection":
						[
							[
								1379,
								1379
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "opener.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2854,
						"regions":
						{
						},
						"selection":
						[
							[
								387,
								387
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 91.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "status.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								12
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 110.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "Opj.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
